# Enums

enum Token {
  unknown
  pwrd
  gvt
  gro
  usdc
  usdt
  dai
  balancer_gro_weth
  uniswap_gvt_gro
  uniswap_gro_usdc
  curve_pwrd3crv
}

enum TxType {
  deposit
  withdrawal
  transfer_in
  transfer_out
  claim
  multiclaim
  vest
  approval
}

# Entities

type User @entity {
  id: ID! # userAddress
  timestamp: Int
  transfers: [TransferTx!] @derivedFrom(field: "userAddress")
  approvals: [ApprovalTx!] @derivedFrom(field: "ownerAddress")
  claims: [ClaimTx!] @derivedFrom(field: "userAddress")
  deposits: [DepositTx!] @derivedFrom(field: "userAddress")
  withdrawals: [WithdrawalTx!] @derivedFrom(field: "userAddress")
  totals: Totals! @derivedFrom(field: "userAddress")
  pools: [Pool!] @derivedFrom(field: "userAddress")
}

type Totals @entity {
  id: ID! # userAddress
  userAddress: User! # FK to User
  amount_added_pwrd: BigDecimal!
  amount_added_gvt: BigDecimal!
  amount_added_total: BigDecimal!
  amount_removed_pwrd: BigDecimal!
  amount_removed_gvt: BigDecimal!
  amount_removed_total: BigDecimal!
}

type Pool @entity {
  id: ID! # userAddress-poolId
  userAddress: User!  # FK to User
  poolId: Int!
  net_reward: BigDecimal!
  balance: BigDecimal!
}

# gro protocol transfers
type TransferTx @entity {
  id: ID! # hash-logIndex(-in|-out)
  contractAddress: Bytes!
  block: Int! 
  timestamp: Int!
  hash: Bytes!
  type: TxType!
  token: Token!
  userAddress: User!  # FK to User
  fromAddress: Bytes!
  toAddress: Bytes!
  coinAmount: BigDecimal!
  usdAmount: BigDecimal!
}

# gro protocol approvals
type ApprovalTx @entity {
  id: ID! # hash-logIndex
  contractAddress: Bytes!
  block: Int! 
  timestamp: Int!
  hash: Bytes!
  type: TxType!
  token: Token!
  ownerAddress: User!  # FK to User
  spenderAddress: Bytes
  coinAmount: BigDecimal!
  usdAmount: BigDecimal!
}

# staker claims
type ClaimTx @entity {
  id: ID! # hash-logIndex
  contractAddress: Bytes!
  block: Int! 
  timestamp: Int!
  hash: Bytes!
  type: TxType!
  userAddress: User!  # FK to User
  poolId: [Int!]!
  vest: Boolean,
  amount: BigDecimal!
}

# staker deposits
type DepositTx @entity {
  id: ID! # hash-logIndex
  contractAddress: Bytes!
  block: Int! 
  timestamp: Int!
  hash: Bytes!
  type: TxType!
  userAddress: User!  # FK to User
  poolId: Int!
  amount: BigDecimal!
}

# staker withdrawals
type WithdrawalTx @entity {
  id: ID! # hash-logIndex
  contractAddress: Bytes!
  block: Int! 
  timestamp: Int!
  hash: Bytes!
  type: TxType!
  userAddress: User!  # FK to User
  poolId: Int!
  amount: BigDecimal!
}
