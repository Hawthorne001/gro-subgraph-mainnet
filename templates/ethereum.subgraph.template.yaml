specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  # deposit handlers *********************************************
  - kind: ethereum/contract
    name: DepositHandlerV1
    network: {{network}}
    source:
      address: '{{DepositHandlerV1Address}}'
      abi: DepositHandler
      startBlock: {{DepositHandlerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[])
          handler: handleDepositV1
          receipt: true
      file: ./src/mappings/depositHandler.ts
  - kind: ethereum/contract
    name: DepositHandlerV2
    network: {{network}}
    source:
      address: '{{DepositHandlerV2Address}}'
      abi: DepositHandler
      startBlock: {{DepositHandlerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[3])
          handler: handleDepositV2
          receipt: true
      file: ./src/mappings/depositHandler.ts
  - kind: ethereum/contract
    name: DepositHandlerV3
    network: {{network}}
    source:
      address: '{{DepositHandlerV3Address}}'
      abi: DepositHandler
      startBlock: {{DepositHandlerV3StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: DepositHandler
          file: ./abis/ethereum/DepositHandlerV3.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewDeposit(indexed address,indexed address,bool,uint256,uint256[3])
          handler: handleDepositV3
          receipt: true
      file: ./src/mappings/depositHandler.ts
# withdrawal handlers *********************************
  - kind: ethereum/contract
    name: WithdrawHandlerV1
    network: {{network}}
    source:
      address: '{{WithdrawHandlerV1Address}}'
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[])
          handler: handleWithdrawalV1
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
    name: WithdrawHandlerV2
    network: {{network}}
    source:
      address: '{{WithdrawHandlerV2Address}}'
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[3])
          handler: handleWithdrawalV2
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
    name: WithdrawHandlerV3
    network: {{network}}
    source:
      address: '{{WithdrawHandlerV3Address}}'
      abi: WithdrawHandler
      startBlock: {{WithdrawHandlerV3StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Totals
        - TransferTx
      abis:
        - name: WithdrawHandler
          file: ./abis/ethereum/WithdrawHandlerV3.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogNewWithdrawal(indexed address,indexed address,bool,bool,bool,uint256,uint256,uint256,uint256[3])
          handler: handleWithdrawalV3
          receipt: true
      file: ./src/mappings/withdrawHandler.ts
  - kind: ethereum/contract
    name: Gvt
    network: {{network}}
    source:
      address: '{{GvtAddress}}'
      abi: ERC20
      startBlock: {{GvtStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Totals
      abis:
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/gvt.ts
  - kind: ethereum/contract
    name: Pwrd
    network: {{network}}
    source:
      address: '{{PwrdAddress}}'
      abi: ERC20
      startBlock: {{PwrdStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Totals
      abis:
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/pwrd.ts
  - kind: ethereum/contract
    name: Gro
    network: {{network}}
    source:
      address: '{{GroAddress}}'
      abi: Gro
      startBlock: {{GroStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - CoreTx
        - Price
        # - Totals
      abis:
        - name: Gro
          file: ./abis/ethereum/Gro.json
        - name: ERC20
          file: ./abis/ethereum/ERC20.json
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/mappings/gro.ts
  - kind: ethereum/contract
    name: LpTokenStakerV1
    network: {{network}}
    source:
      address: '{{LpTokenStakerV1Address}}'
      abi: LpTokenStaker
      startBlock: {{LpTokenStakerV1StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Pools
        - ClaimTx
      abis:
        - name: LpTokenStaker
          file: ./abis/ethereum/LpTokenStakerV1.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogClaim(indexed address,indexed uint256,uint256)
          handler: handleClaimV1
        - event: LogDeposit(indexed address,indexed uint256,uint256)
          handler: handleDepositV1
        - event: LogWithdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdrawV1
      file: ./src/mappings/staker.ts
  - kind: ethereum/contract
    name: LpTokenStakerV2
    network: {{network}}
    source:
      address: '{{LpTokenStakerV2Address}}'
      abi: LpTokenStaker
      startBlock: {{LpTokenStakerV2StartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - User
        - Pools
        - ClaimTx
        - DepositTx
        - WithdrawalTx
      abis:
        - name: LpTokenStaker
          file: ./abis/ethereum/LpTokenStakerV2.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogClaim(indexed address,bool,indexed uint256,uint256)
          handler: handleClaimV2
        - event: LogMultiClaim(indexed address,bool,uint256[],uint256)
          handler: handleMultiClaimV2
        - event: LogDeposit(indexed address,indexed uint256,uint256)
          handler: handleDepositV2
        - event: LogWithdraw(indexed address,indexed uint256,uint256)
          handler: handleWithdrawV2
      file: ./src/mappings/staker.ts
  - kind: ethereum/contract
    name: PnL
    network: {{network}}
    source:
      address: '{{PnLAddress}}'
      abi: PnL
      startBlock: {{PnLStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - Factors
      abis:
        - name: PnL
          file: ./abis/ethereum/PnL.json
        - name: Gvt
          file: ./abis/ethereum/Gvt.json
        - name: Pwrd
          file: ./abis/ethereum/Pwrd.json
      eventHandlers:
        - event: LogPnLExecution(uint256,int256,int256,int256,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handlePnLExecution
      file: ./src/mappings/pnl.ts
  # Pool 1 : UniswapV2 50% GVT - 50% GRO    
  - kind: ethereum/contract
    name: UniswapV2PairGvtGro
    network: {{network}}
    source:
      address: '{{UniswapV2GvtGroAddress}}'
      abi: UniswapV2Pair
      startBlock: {{UniswapV2GvtGroStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwapGvtGro
      file: ./src/mappings/uniswapV2Pair.ts
  # Pool 2 : UniswapV2 50% GRO - 50% USDC    
  - kind: ethereum/contract
    name: UniswapV2PairGroUsdc
    network: {{network}}
    source:
      address: '{{UniswapV2GroUsdcAddress}}'
      abi: UniswapV2Pair
      startBlock: {{UniswapV2GroUsdcStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: UniswapV2Pair
          file: ./abis/ethereum/UniswapV2Pair.json
      eventHandlers:
        - event: Swap(indexed address,uint256,uint256,uint256,uint256,indexed address)
          handler: handleSwapGroUsdc
      file: ./src/mappings/uniswapV2Pair.ts
  # Pool 4 : Curve Metapool 50% 3CRV - 50% PWRD    
  - kind: ethereum/contract
    name: CurveMetapool3CRV
    network: {{network}}
    source:
      address: '{{CurveMetapool3CRVAddress}}'
      abi: Vyper_contract
      startBlock: {{CurveMetapool3CRVStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Price
        - PoolData
      abis:
        - name: Vyper_contract
          file: ./abis/ethereum/CurveMetapool3CRV.json
      eventHandlers:
        - event: TokenExchange(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchange
        - event: TokenExchangeUnderlying(indexed address,int128,uint256,int128,uint256)
          handler: handleTokenExchangeUnderlying
      file: ./src/mappings/curveMetapool3CRV.ts

# stablecoins *********************************
  # - kind: ethereum/contract
  #   name: Dai
  #   network: {{network}}
  #   source:
  #     address: '{{DaiAddress}}'
  #     abi: Dai
  #     startBlock: {{DaiStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Dai
  #         file: ./abis/ethereum/Dai.json
  #     eventHandlers:
  #       - event: Approval(indexed address,indexed address,uint256)
  #         handler: handleApproval
  #     file: ./src/mappings/Dai.ts
  # - kind: ethereum/contract
  #   name: Usdc
  #   network: {{network}}
  #   source:
  #     address: '{{UsdcAddress}}'
  #     abi: ERC20
  #     startBlock: {{UsdcStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Usdc
  #         file: ./abis/ethereum/Usdc.json
  #       - name: ERC20
  #         file: ./abis/ethereum/ERC20.json
  #     eventHandlers:
  #       - event: Approval(indexed address,indexed address,uint256)
  #         handler: handleApproval
  #     file: ./src/mappings/Usdc.ts
  # - kind: ethereum/contract
  #   name: Usdt
  #   network: {{network}}
  #   source:
  #     address: '{{UsdtAddress}}'
  #     abi: ERC20
  #     startBlock: {{UsdtStartBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: Usdt
  #         file: ./abis/ethereum/Usdt.json
  #       - name: ERC20
  #         file: ./abis/ethereum/ERC20.json
  #     eventHandlers:
  #       - event: Approval(indexed address,indexed address,uint256)
  #         handler: handleApproval
  #     file: ./src/mappings/Usdt.ts

  
  # - kind: ethereum
  #   name: GROVestingV1
  #   network: mainnet
  #   source:
  #     address: "0xA28693bf01Dc261887b238646Bb9636cB3a3730B"
  #     abi: GROVesting
  #     # startBlock: 13405101
  #     startBlock: 14900000
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - User
  #       - CoreTx
  #     abis:
  #       - name: GROVesting
  #         file: ./abis/GROVestingV1.json
  #     eventHandlers:
  #       - event: LogVest(indexed address,uint256,uint256,(uint256,uint256))
  #         handler: handleVestV1
  #       - event: LogExit(indexed address,uint256,uint256,uint256,uint256)
  #         handler: handleExitV1
  #     file: ./src/mappings/gro-vesting.ts
  # - kind: ethereum
    # name: GROVestingV2
    # network: mainnet
    # source:
    #   address: "0x748218256AfE0A19a88EBEB2E0C5Ce86d2178360"
    #   abi: GROVesting
    #   # startBlock: 13405101
    #   startBlock: 14900000
    # mapping:
    #   kind: ethereum/events
    #   apiVersion: 0.0.5
    #   language: wasm/assemblyscript
    #   entities:
    #     - User
    #     - CoreTx
    #   abis:
    #     - name: GROVesting
    #       file: ./abis/GROVestingV2.json
    #   eventHandlers:
    #     - event: LogVest(indexed address,uint256,uint256,(uint256,uint256))
    #       handler: handleVestV2
    #     - event: LogExit(indexed address,uint256,uint256,uint256,uint256)
    #       handler: handleExitV2
    #   file: ./src/mappings/gro-vesting.ts
  # - kind: ethereum